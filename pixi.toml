"$schema" = "https://pixi.sh/v0.30.0/schema/manifest/schema.json"

[project]
name = "prjsf"
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]

# aliases ######################################################################
[tasks]
# "build", "test", "dist", "docs", "check"
dev = {depends-on = ["fix", "lint", "build"]}
fix = {depends-on = [
  "fix-toml-taplo",
  "fix-js-dedupe",
  "fix-js-prettier",
  "fix-py-ruff",
]}
lint = {depends-on = ["lint-py-ruff"]}
build = {depends-on = ["build-js-lib", "build-js-app"]}

[tasks.prettier--]
cmd = """
yarn prettier
  --list-different
  --cache
  --cache-location build/.cache/prettier
  "*.{yml,json,md}"
  "{docs,tests,src,js,.github}/**/*.{md,json,yml,yaml,css,ts,tsx,ts}"
"""

# tasks ########################################################################
[feature.tasks-build.tasks.setup-js]
cmd = "yarn"
inputs = ["{yarn.lock,package.json,.yarnrc.yml}", "js/package.json"]
outputs = ["node_modules/.yarn-state.yml"]

[feature.tasks-build.tasks.build-js-lib]
cmd = "yarn build:lib"
depends-on = ["setup-js"]
inputs = ["node_modules/.yarn-state.yml", "js/src", "js/{package,tsconfig}.json"]
outputs = ["js/lib"]

[feature.tasks-build.tasks.build-js-app]
cmd = "yarn build:app"
depends-on = ["build-js-lib"]
inputs = ["node_modules/.yarn-state.yml", "js/lib", "js/webpack.config.mjs"]
outputs = ["js/dist"]

[feature.tasks-build.tasks.build-js-dist]
cmd = "mdkir -p dist && rm -rg *.tgz && npm pack ../js"
depends-on = ["build-js-app"]
inputs = ["node_modules/.yarn-state.yml", "js/dist"]
outputs = ["dist/*.tgz"]

[feature.tasks-lint.tasks.fix-py-ruff]
cmd = "ruff format && ruff check --fix-only"
inputs = ["pyproject.toml", "{src,tests,docs}/**/*.py"]

[feature.tasks-lint.tasks.lint-py-ruff]
cmd = "ruff format --check && ruff check"
inputs = ["pyproject.toml", "{src,tests,docs}/**/*.py"]

[feature.tasks-lint.tasks.fix-js-prettier]
cmd = "pixi r prettier-- --write"
depends-on = ["setup-js"]
inputs = [
  "*.{yml,json,md}",
  "{docs,tests,src,js,.github}/**/*.{md,json,yml,yaml,css,ts,tsx,ts}",
]

[feature.tasks-lint.tasks.fix-js-dedupe]
cmd = "yarn yarn-berry-deduplicate --fail --strategy fewer"
depends-on = ["setup-js"]
inputs = ["node_modules/.yarn-state.yml", "package.json"]
outputs = ["yarn.lock"]

[feature.tasks-lint.tasks.fix-toml-taplo]
cmd = """
  taplo fmt
    --option=array_auto_collapse=false
    --option=array_auto_expand=true
    --option=compact_inline_tables=true
    --option=column_width=88
    --option=indent_string="  "
    *.toml"""
inputs = ["*.toml"]

# deps #########################################################################
[feature.deps-run.dependencies]
sphinx = ">=6.1"
python = ">=3.9"

[feature.deps-run-oldest.dependencies]
sphinx = "6.1.*"
python = "3.9.*"

[feature.deps-test.dependencies]
pytest = ">=8"
coverage = ">=7"

[feature.deps-docs.dependencies]
pydata-sphinx-theme = ">=0.15.4,<0.16.0a0"

[feature.deps-build.dependencies]
flit = ">=3.9.0,<4.0.0a0"
nodejs = "22.*"
yarn = "3.6.4"

[feature.deps-lint.dependencies]
ruff = "*"
mypy = "*"
taplo = "*"

[feature.deps-pip.dependencies]
pip = "*"

# envs #########################################################################
[environments]
build = ["deps-build", "tasks-build"]
test = ["deps-test", "deps-run"]
test-oldest = ["deps-pip", "deps-test", "deps-run", "deps-run-oldest"]
lint = ["deps-build", "deps-lint", "tasks-lint"]
docs = ["deps-docs", "deps-run"]
