#  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░  #
# ░░  ░░░░  ░░       ░░░  ░░░░░░░░        ░░░      ░░░        ░░░░░░░      ░░░ #
# ▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒▒▒▒▒▒▒▒▒▒▒  ▒▒  ▒▒▒▒▒▒▒▒  ▒▒▒▒▒▒▒▒▒▒▒▒  ▒▒▒▒  ▒▒ #
# ▓▓  ▓▓▓▓  ▓▓       ▓▓▓  ▓▓▓▓▓▓▓▓▓▓▓▓▓▓  ▓▓▓      ▓▓▓      ▓▓▓▓▓▓▓▓  ▓  ▓  ▓▓ #
# ██  ████  ██  ███  ███  ████████  ████  ████████  ██  ████████████  ████  ██ #
# ███      ███  ████  ██        ███      ████      ███  █████████████      ███ #
#  ▒▓██████████████████████████████████████████████████████████████████████▓▒  #

title = "urljsf"
description = "A schema for building forms for building URLs for building..."

"$schema" = "http://json-schema.org/draft-07/schema#"
"$id" = "https://deathbeds.github.io/urljsf/_static/schema/v0/form.schema.json"
type = "object"
required = ["url_template", "url_form", "file_form"]
additionalProperties = false

[properties]
url_template = {"$ref" = "#/definitions/any-url-template", description = """
`nunjucks` template for building a URL
"""}
url_form = {"$ref" = "#/definitions/url-form", description = """
values that contribute to the `url` context value of the `url_template`
"""}
file_form = {"$ref" = "#/definitions/file-form", description = """
values that contribut the `file_contents` context value of the `url_template`
"""}
theme = {"$ref" = "#/definitions/any-theme", description = """
a theme name to use for the overall form in an iframe
"""}

[properties.iframe]
description = "isolate each form on the page in an `iframe`"
type = "boolean"

[properties.iframe_style]
description = """
additional simple CSS to apply to an `iframe` element (implies `iframe`)
"""
type = "string"

# url form #####################################################################
[definitions.url-form]
title = "URL Form"
description = "a definition of a form to build a URL"
type = "object"
required = ["url_template"]
additionalProperties = false

[definitions.url-form.properties]
schema = {"$ref" = "#/definitions/any-schema-location", descripton = """
URL for a JSON schema to describe the URL fields: features not present in
Draft 7 are best-effort.
"""}
ui_schema = {"$ref" = "#/definitions/any-schema-location", descripton = """
URL for an `rjsf` UI schema to describe the URL fields
"""}
form_data = {"$ref" = "#/definitions/any-schema-location", descripton = """
JSON-compatible initial data for URL fields
"""}
props = {"$ref" = "./props.schema.json#/definitions/Props", descripton = """
JSON-compatible subset of configuration properties for URL fields
"""}

# file form ####################################################################
[definitions.file-form]
title = "File Form"
description = "a description of a form that builds a data file"
type = "object"
required = ["schema", "format"]
additionalProperties = false

[definitions.file-form.properties]
format = {"$ref" = "#/definitions/any-file-format"}
schema = {"$ref" = "#/definitions/any-schema-location", descripton = """
URL for a JSON schema to describe file contents: features not present in Draft 7
are best-effort.
"""}
ui_schema = {"$ref" = "#/definitions/any-schema-location", descripton = """
URL for an `rjsf` UI schema to describe the file fields.
"""}
form_data = {"$ref" = "#/definitions/any-schema-location", descripton = """
JSON-compatible initial data for file contents
"""}
props = {"$ref" = "./props.schema.json#/definitions/Props", descripton = """
JSON-compatible subset of configuration properties for file contents
"""}

[definitions.file-form.properties.prune_empty]
description = "prune empty lists, object, etc."
type = "boolean"

# other ########################################################################
[definitions.any-file-format]
title = "File Format"
description = "a format that can be serialized or deserialized"
enum = ["json", "toml", "yaml"]

[definitions.any-theme]
title = "Theme"
type = "string"
default = "bootstrap"
description = """
a name of a theme supported by a compatible version of `urljsf`.

all [bootswatch] themes are available, with the vanilla [`bootstrap`][bs5]
by default.

[bs5]: https://getbootstrap.com/docs/5.0
[bootswatch]: https://bootswatch.com
"""
enum = [
  "bootstrap",
  "cerulean",
  "cosmo",
  "cyborg",
  "darkly",
  "flatly",
  "journal",
  "litera",
  "lumen",
  "lux",
  "materia",
  "minty",
  "morph",
  "pulse",
  "quartz",
  "sandstone",
  "simplex",
  "sketchy",
  "slate",
  "solar",
  "spacelab",
  "superhero",
  "united",
  "vapor",
  "yeti",
  "zephyr",
]

[definitions.any-schema-location]
title = "A Schema Location"
type = "string"
format = "uri-reference"
minLength = 1
description = """
a path to a JSON schema, serialized as JSON, TOML, or (simple) YAML.
"""

[definitions.any-url-template]
title = "URL Template"
type = "string"
minLength = 1
description = """
a [nunjucks]-compatible template.

The [jinja compatibility layer][jinjacompat] is enabled, allowing for more expressive,
python-like syntax.

[nunjucks]: https://mozilla.github.io/nunjucks
[jinjacompat]: https://mozilla.github.io/nunjucks/api.html#installjinjacompat
"""
